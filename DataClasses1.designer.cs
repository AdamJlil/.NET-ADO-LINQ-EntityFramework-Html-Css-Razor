#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="prj1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertvideocour(videocour instance);
    partial void Updatevideocour(videocour instance);
    partial void Deletevideocour(videocour instance);
    partial void Insertvideo(video instance);
    partial void Updatevideo(video instance);
    partial void Deletevideo(video instance);
    partial void Insertprof(prof instance);
    partial void Updateprof(prof instance);
    partial void Deleteprof(prof instance);
    partial void Insertcour(cour instance);
    partial void Updatecour(cour instance);
    partial void Deletecour(cour instance);
    partial void Insertinscription(inscription instance);
    partial void Updateinscription(inscription instance);
    partial void Deleteinscription(inscription instance);
    partial void Insertetudiant(etudiant instance);
    partial void Updateetudiant(etudiant instance);
    partial void Deleteetudiant(etudiant instance);
    partial void InsertnivEduc(nivEduc instance);
    partial void UpdatenivEduc(nivEduc instance);
    partial void DeletenivEduc(nivEduc instance);
    partial void Insertprofcour(profcour instance);
    partial void Updateprofcour(profcour instance);
    partial void Deleteprofcour(profcour instance);
    partial void Insertfile(file instance);
    partial void Updatefile(file instance);
    partial void Deletefile(file instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["prj1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<videocour> videocours
		{
			get
			{
				return this.GetTable<videocour>();
			}
		}
		
		public System.Data.Linq.Table<video> videos
		{
			get
			{
				return this.GetTable<video>();
			}
		}
		
		public System.Data.Linq.Table<prof> profs
		{
			get
			{
				return this.GetTable<prof>();
			}
		}
		
		public System.Data.Linq.Table<cour> cours
		{
			get
			{
				return this.GetTable<cour>();
			}
		}
		
		public System.Data.Linq.Table<inscription> inscriptions
		{
			get
			{
				return this.GetTable<inscription>();
			}
		}
		
		public System.Data.Linq.Table<etudiant> etudiants
		{
			get
			{
				return this.GetTable<etudiant>();
			}
		}
		
		public System.Data.Linq.Table<nivEduc> nivEducs
		{
			get
			{
				return this.GetTable<nivEduc>();
			}
		}
		
		public System.Data.Linq.Table<profcour> profcours
		{
			get
			{
				return this.GetTable<profcour>();
			}
		}
		
		public System.Data.Linq.Table<file> files
		{
			get
			{
				return this.GetTable<file>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.videocours")]
	public partial class videocour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdVideoCours;
		
		private System.Nullable<int> _IdCours;
		
		private System.Nullable<int> _IdVideo;
		
		private EntityRef<video> _video;
		
		private EntityRef<cour> _cour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVideoCoursChanging(int value);
    partial void OnIdVideoCoursChanged();
    partial void OnIdCoursChanging(System.Nullable<int> value);
    partial void OnIdCoursChanged();
    partial void OnIdVideoChanging(System.Nullable<int> value);
    partial void OnIdVideoChanged();
    #endregion
		
		public videocour()
		{
			this._video = default(EntityRef<video>);
			this._cour = default(EntityRef<cour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVideoCours", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdVideoCours
		{
			get
			{
				return this._IdVideoCours;
			}
			set
			{
				if ((this._IdVideoCours != value))
				{
					this.OnIdVideoCoursChanging(value);
					this.SendPropertyChanging();
					this._IdVideoCours = value;
					this.SendPropertyChanged("IdVideoCours");
					this.OnIdVideoCoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCours", DbType="Int")]
		public System.Nullable<int> IdCours
		{
			get
			{
				return this._IdCours;
			}
			set
			{
				if ((this._IdCours != value))
				{
					if (this._cour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCoursChanging(value);
					this.SendPropertyChanging();
					this._IdCours = value;
					this.SendPropertyChanged("IdCours");
					this.OnIdCoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVideo", DbType="Int")]
		public System.Nullable<int> IdVideo
		{
			get
			{
				return this._IdVideo;
			}
			set
			{
				if ((this._IdVideo != value))
				{
					if (this._video.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVideoChanging(value);
					this.SendPropertyChanging();
					this._IdVideo = value;
					this.SendPropertyChanged("IdVideo");
					this.OnIdVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="video_videocour", Storage="_video", ThisKey="IdVideo", OtherKey="IdVideo", IsForeignKey=true)]
		public video video
		{
			get
			{
				return this._video.Entity;
			}
			set
			{
				video previousValue = this._video.Entity;
				if (((previousValue != value) 
							|| (this._video.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._video.Entity = null;
						previousValue.videocours.Remove(this);
					}
					this._video.Entity = value;
					if ((value != null))
					{
						value.videocours.Add(this);
						this._IdVideo = value.IdVideo;
					}
					else
					{
						this._IdVideo = default(Nullable<int>);
					}
					this.SendPropertyChanged("video");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cour_videocour", Storage="_cour", ThisKey="IdCours", OtherKey="IdCours", IsForeignKey=true)]
		public cour cour
		{
			get
			{
				return this._cour.Entity;
			}
			set
			{
				cour previousValue = this._cour.Entity;
				if (((previousValue != value) 
							|| (this._cour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cour.Entity = null;
						previousValue.videocours.Remove(this);
					}
					this._cour.Entity = value;
					if ((value != null))
					{
						value.videocours.Add(this);
						this._IdCours = value.IdCours;
					}
					else
					{
						this._IdCours = default(Nullable<int>);
					}
					this.SendPropertyChanged("cour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.video")]
	public partial class video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdVideo;
		
		private string _title;
		
		private string _desc;
		
		private string _url;
		
		private string _urlImgVideo;
		
		private EntitySet<videocour> _videocours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVideoChanging(int value);
    partial void OnIdVideoChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescChanging(string value);
    partial void OndescChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnurlImgVideoChanging(string value);
    partial void OnurlImgVideoChanged();
    #endregion
		
		public video()
		{
			this._videocours = new EntitySet<videocour>(new Action<videocour>(this.attach_videocours), new Action<videocour>(this.detach_videocours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVideo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdVideo
		{
			get
			{
				return this._IdVideo;
			}
			set
			{
				if ((this._IdVideo != value))
				{
					this.OnIdVideoChanging(value);
					this.SendPropertyChanging();
					this._IdVideo = value;
					this.SendPropertyChanged("IdVideo");
					this.OnIdVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(255)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[desc]", Storage="_desc", DbType="NVarChar(255)")]
		public string desc
		{
			get
			{
				return this._desc;
			}
			set
			{
				if ((this._desc != value))
				{
					this.OndescChanging(value);
					this.SendPropertyChanging();
					this._desc = value;
					this.SendPropertyChanged("desc");
					this.OndescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(255)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urlImgVideo", DbType="NVarChar(255)")]
		public string urlImgVideo
		{
			get
			{
				return this._urlImgVideo;
			}
			set
			{
				if ((this._urlImgVideo != value))
				{
					this.OnurlImgVideoChanging(value);
					this.SendPropertyChanging();
					this._urlImgVideo = value;
					this.SendPropertyChanged("urlImgVideo");
					this.OnurlImgVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="video_videocour", Storage="_videocours", ThisKey="IdVideo", OtherKey="IdVideo")]
		public EntitySet<videocour> videocours
		{
			get
			{
				return this._videocours;
			}
			set
			{
				this._videocours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_videocours(videocour entity)
		{
			this.SendPropertyChanging();
			entity.video = this;
		}
		
		private void detach_videocours(videocour entity)
		{
			this.SendPropertyChanging();
			entity.video = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.prof")]
	public partial class prof : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProf;
		
		private string _username;
		
		private string _password;
		
		private EntitySet<cour> _cours;
		
		private EntitySet<profcour> _profcours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProfChanging(int value);
    partial void OnIdProfChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public prof()
		{
			this._cours = new EntitySet<cour>(new Action<cour>(this.attach_cours), new Action<cour>(this.detach_cours));
			this._profcours = new EntitySet<profcour>(new Action<profcour>(this.attach_profcours), new Action<profcour>(this.detach_profcours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProf", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProf
		{
			get
			{
				return this._IdProf;
			}
			set
			{
				if ((this._IdProf != value))
				{
					this.OnIdProfChanging(value);
					this.SendPropertyChanging();
					this._IdProf = value;
					this.SendPropertyChanged("IdProf");
					this.OnIdProfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NChar(10)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="prof_cour", Storage="_cours", ThisKey="IdProf", OtherKey="IdProf")]
		public EntitySet<cour> cours
		{
			get
			{
				return this._cours;
			}
			set
			{
				this._cours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="prof_profcour", Storage="_profcours", ThisKey="IdProf", OtherKey="IdProf")]
		public EntitySet<profcour> profcours
		{
			get
			{
				return this._profcours;
			}
			set
			{
				this._profcours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cours(cour entity)
		{
			this.SendPropertyChanging();
			entity.prof = this;
		}
		
		private void detach_cours(cour entity)
		{
			this.SendPropertyChanging();
			entity.prof = null;
		}
		
		private void attach_profcours(profcour entity)
		{
			this.SendPropertyChanging();
			entity.prof = this;
		}
		
		private void detach_profcours(profcour entity)
		{
			this.SendPropertyChanging();
			entity.prof = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cours")]
	public partial class cour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCours;
		
		private string _niveduc;
		
		private string _nom;
		
		private string _desc;
		
		private string _image;
		
		private System.Nullable<int> _IdProf;
		
		private EntitySet<videocour> _videocours;
		
		private EntitySet<profcour> _profcours;
		
		private EntitySet<file> _files;
		
		private EntityRef<prof> _prof;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCoursChanging(int value);
    partial void OnIdCoursChanged();
    partial void OnniveducChanging(string value);
    partial void OnniveducChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OndescChanging(string value);
    partial void OndescChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnIdProfChanging(System.Nullable<int> value);
    partial void OnIdProfChanged();
    #endregion
		
		public cour()
		{
			this._videocours = new EntitySet<videocour>(new Action<videocour>(this.attach_videocours), new Action<videocour>(this.detach_videocours));
			this._profcours = new EntitySet<profcour>(new Action<profcour>(this.attach_profcours), new Action<profcour>(this.detach_profcours));
			this._files = new EntitySet<file>(new Action<file>(this.attach_files), new Action<file>(this.detach_files));
			this._prof = default(EntityRef<prof>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCours", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCours
		{
			get
			{
				return this._IdCours;
			}
			set
			{
				if ((this._IdCours != value))
				{
					this.OnIdCoursChanging(value);
					this.SendPropertyChanging();
					this._IdCours = value;
					this.SendPropertyChanged("IdCours");
					this.OnIdCoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_niveduc", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string niveduc
		{
			get
			{
				return this._niveduc;
			}
			set
			{
				if ((this._niveduc != value))
				{
					this.OnniveducChanging(value);
					this.SendPropertyChanging();
					this._niveduc = value;
					this.SendPropertyChanged("niveduc");
					this.OnniveducChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[desc]", Storage="_desc", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string desc
		{
			get
			{
				return this._desc;
			}
			set
			{
				if ((this._desc != value))
				{
					this.OndescChanging(value);
					this.SendPropertyChanging();
					this._desc = value;
					this.SendPropertyChanged("desc");
					this.OndescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProf", DbType="Int")]
		public System.Nullable<int> IdProf
		{
			get
			{
				return this._IdProf;
			}
			set
			{
				if ((this._IdProf != value))
				{
					if (this._prof.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProfChanging(value);
					this.SendPropertyChanging();
					this._IdProf = value;
					this.SendPropertyChanged("IdProf");
					this.OnIdProfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cour_videocour", Storage="_videocours", ThisKey="IdCours", OtherKey="IdCours")]
		public EntitySet<videocour> videocours
		{
			get
			{
				return this._videocours;
			}
			set
			{
				this._videocours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cour_profcour", Storage="_profcours", ThisKey="IdCours", OtherKey="IdCours")]
		public EntitySet<profcour> profcours
		{
			get
			{
				return this._profcours;
			}
			set
			{
				this._profcours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cour_file", Storage="_files", ThisKey="IdCours", OtherKey="IdCours")]
		public EntitySet<file> files
		{
			get
			{
				return this._files;
			}
			set
			{
				this._files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="prof_cour", Storage="_prof", ThisKey="IdProf", OtherKey="IdProf", IsForeignKey=true)]
		public prof prof
		{
			get
			{
				return this._prof.Entity;
			}
			set
			{
				prof previousValue = this._prof.Entity;
				if (((previousValue != value) 
							|| (this._prof.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._prof.Entity = null;
						previousValue.cours.Remove(this);
					}
					this._prof.Entity = value;
					if ((value != null))
					{
						value.cours.Add(this);
						this._IdProf = value.IdProf;
					}
					else
					{
						this._IdProf = default(Nullable<int>);
					}
					this.SendPropertyChanged("prof");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_videocours(videocour entity)
		{
			this.SendPropertyChanging();
			entity.cour = this;
		}
		
		private void detach_videocours(videocour entity)
		{
			this.SendPropertyChanging();
			entity.cour = null;
		}
		
		private void attach_profcours(profcour entity)
		{
			this.SendPropertyChanging();
			entity.cour = this;
		}
		
		private void detach_profcours(profcour entity)
		{
			this.SendPropertyChanging();
			entity.cour = null;
		}
		
		private void attach_files(file entity)
		{
			this.SendPropertyChanging();
			entity.cour = this;
		}
		
		private void detach_files(file entity)
		{
			this.SendPropertyChanging();
			entity.cour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inscription")]
	public partial class inscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nom;
		
		private string _prenom;
		
		private string _email;
		
		private string _nivEduc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnnivEducChanging(string value);
    partial void OnnivEducChanged();
    #endregion
		
		public inscription()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NVarChar(255)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="NVarChar(255)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nivEduc", DbType="NVarChar(255)")]
		public string nivEduc
		{
			get
			{
				return this._nivEduc;
			}
			set
			{
				if ((this._nivEduc != value))
				{
					this.OnnivEducChanging(value);
					this.SendPropertyChanging();
					this._nivEduc = value;
					this.SendPropertyChanged("nivEduc");
					this.OnnivEducChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.etudiant")]
	public partial class etudiant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEtudiant;
		
		private string _nom;
		
		private string _prenom;
		
		private string _email;
		
		private string _username;
		
		private string _password;
		
		private string _nivEduc;
		
		private byte _statutConn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEtudiantChanging(int value);
    partial void OnIdEtudiantChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnivEducChanging(string value);
    partial void OnnivEducChanged();
    partial void OnstatutConnChanging(byte value);
    partial void OnstatutConnChanged();
    #endregion
		
		public etudiant()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEtudiant", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEtudiant
		{
			get
			{
				return this._IdEtudiant;
			}
			set
			{
				if ((this._IdEtudiant != value))
				{
					this.OnIdEtudiantChanging(value);
					this.SendPropertyChanging();
					this._IdEtudiant = value;
					this.SendPropertyChanged("IdEtudiant");
					this.OnIdEtudiantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nivEduc", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string nivEduc
		{
			get
			{
				return this._nivEduc;
			}
			set
			{
				if ((this._nivEduc != value))
				{
					this.OnnivEducChanging(value);
					this.SendPropertyChanging();
					this._nivEduc = value;
					this.SendPropertyChanged("nivEduc");
					this.OnnivEducChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statutConn", DbType="TinyInt NOT NULL")]
		public byte statutConn
		{
			get
			{
				return this._statutConn;
			}
			set
			{
				if ((this._statutConn != value))
				{
					this.OnstatutConnChanging(value);
					this.SendPropertyChanging();
					this._statutConn = value;
					this.SendPropertyChanged("statutConn");
					this.OnstatutConnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nivEduc")]
	public partial class nivEduc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nivEduc1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnivEduc1Changing(string value);
    partial void OnnivEduc1Changed();
    #endregion
		
		public nivEduc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nivEduc", Storage="_nivEduc1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string nivEduc1
		{
			get
			{
				return this._nivEduc1;
			}
			set
			{
				if ((this._nivEduc1 != value))
				{
					this.OnnivEduc1Changing(value);
					this.SendPropertyChanging();
					this._nivEduc1 = value;
					this.SendPropertyChanged("nivEduc1");
					this.OnnivEduc1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.profcour")]
	public partial class profcour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProfCours;
		
		private System.Nullable<int> _IdCours;
		
		private System.Nullable<int> _IdProf;
		
		private EntityRef<cour> _cour;
		
		private EntityRef<prof> _prof;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProfCoursChanging(int value);
    partial void OnIdProfCoursChanged();
    partial void OnIdCoursChanging(System.Nullable<int> value);
    partial void OnIdCoursChanged();
    partial void OnIdProfChanging(System.Nullable<int> value);
    partial void OnIdProfChanged();
    #endregion
		
		public profcour()
		{
			this._cour = default(EntityRef<cour>);
			this._prof = default(EntityRef<prof>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProfCours", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProfCours
		{
			get
			{
				return this._IdProfCours;
			}
			set
			{
				if ((this._IdProfCours != value))
				{
					this.OnIdProfCoursChanging(value);
					this.SendPropertyChanging();
					this._IdProfCours = value;
					this.SendPropertyChanged("IdProfCours");
					this.OnIdProfCoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCours", DbType="Int")]
		public System.Nullable<int> IdCours
		{
			get
			{
				return this._IdCours;
			}
			set
			{
				if ((this._IdCours != value))
				{
					if (this._cour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCoursChanging(value);
					this.SendPropertyChanging();
					this._IdCours = value;
					this.SendPropertyChanged("IdCours");
					this.OnIdCoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProf", DbType="Int")]
		public System.Nullable<int> IdProf
		{
			get
			{
				return this._IdProf;
			}
			set
			{
				if ((this._IdProf != value))
				{
					if (this._prof.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProfChanging(value);
					this.SendPropertyChanging();
					this._IdProf = value;
					this.SendPropertyChanged("IdProf");
					this.OnIdProfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cour_profcour", Storage="_cour", ThisKey="IdCours", OtherKey="IdCours", IsForeignKey=true)]
		public cour cour
		{
			get
			{
				return this._cour.Entity;
			}
			set
			{
				cour previousValue = this._cour.Entity;
				if (((previousValue != value) 
							|| (this._cour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cour.Entity = null;
						previousValue.profcours.Remove(this);
					}
					this._cour.Entity = value;
					if ((value != null))
					{
						value.profcours.Add(this);
						this._IdCours = value.IdCours;
					}
					else
					{
						this._IdCours = default(Nullable<int>);
					}
					this.SendPropertyChanged("cour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="prof_profcour", Storage="_prof", ThisKey="IdProf", OtherKey="IdProf", IsForeignKey=true)]
		public prof prof
		{
			get
			{
				return this._prof.Entity;
			}
			set
			{
				prof previousValue = this._prof.Entity;
				if (((previousValue != value) 
							|| (this._prof.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._prof.Entity = null;
						previousValue.profcours.Remove(this);
					}
					this._prof.Entity = value;
					if ((value != null))
					{
						value.profcours.Add(this);
						this._IdProf = value.IdProf;
					}
					else
					{
						this._IdProf = default(Nullable<int>);
					}
					this.SendPropertyChanged("prof");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[file]")]
	public partial class file : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFile;
		
		private string _title_file;
		
		private string _desc_file;
		
		private string _path_file;
		
		private string _public_file;
		
		private System.Nullable<int> _IdCours;
		
		private EntityRef<cour> _cour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFileChanging(int value);
    partial void OnIdFileChanged();
    partial void Ontitle_fileChanging(string value);
    partial void Ontitle_fileChanged();
    partial void Ondesc_fileChanging(string value);
    partial void Ondesc_fileChanged();
    partial void Onpath_fileChanging(string value);
    partial void Onpath_fileChanged();
    partial void Onpublic_fileChanging(string value);
    partial void Onpublic_fileChanged();
    partial void OnIdCoursChanging(System.Nullable<int> value);
    partial void OnIdCoursChanged();
    #endregion
		
		public file()
		{
			this._cour = default(EntityRef<cour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFile", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFile
		{
			get
			{
				return this._IdFile;
			}
			set
			{
				if ((this._IdFile != value))
				{
					this.OnIdFileChanging(value);
					this.SendPropertyChanging();
					this._IdFile = value;
					this.SendPropertyChanged("IdFile");
					this.OnIdFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title_file", DbType="NVarChar(50)")]
		public string title_file
		{
			get
			{
				return this._title_file;
			}
			set
			{
				if ((this._title_file != value))
				{
					this.Ontitle_fileChanging(value);
					this.SendPropertyChanging();
					this._title_file = value;
					this.SendPropertyChanged("title_file");
					this.Ontitle_fileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desc_file", DbType="NVarChar(50)")]
		public string desc_file
		{
			get
			{
				return this._desc_file;
			}
			set
			{
				if ((this._desc_file != value))
				{
					this.Ondesc_fileChanging(value);
					this.SendPropertyChanging();
					this._desc_file = value;
					this.SendPropertyChanged("desc_file");
					this.Ondesc_fileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path_file", DbType="NVarChar(50)")]
		public string path_file
		{
			get
			{
				return this._path_file;
			}
			set
			{
				if ((this._path_file != value))
				{
					this.Onpath_fileChanging(value);
					this.SendPropertyChanging();
					this._path_file = value;
					this.SendPropertyChanged("path_file");
					this.Onpath_fileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_public_file", DbType="NVarChar(50)")]
		public string public_file
		{
			get
			{
				return this._public_file;
			}
			set
			{
				if ((this._public_file != value))
				{
					this.Onpublic_fileChanging(value);
					this.SendPropertyChanging();
					this._public_file = value;
					this.SendPropertyChanged("public_file");
					this.Onpublic_fileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCours", DbType="Int")]
		public System.Nullable<int> IdCours
		{
			get
			{
				return this._IdCours;
			}
			set
			{
				if ((this._IdCours != value))
				{
					if (this._cour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCoursChanging(value);
					this.SendPropertyChanging();
					this._IdCours = value;
					this.SendPropertyChanged("IdCours");
					this.OnIdCoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cour_file", Storage="_cour", ThisKey="IdCours", OtherKey="IdCours", IsForeignKey=true)]
		public cour cour
		{
			get
			{
				return this._cour.Entity;
			}
			set
			{
				cour previousValue = this._cour.Entity;
				if (((previousValue != value) 
							|| (this._cour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cour.Entity = null;
						previousValue.files.Remove(this);
					}
					this._cour.Entity = value;
					if ((value != null))
					{
						value.files.Add(this);
						this._IdCours = value.IdCours;
					}
					else
					{
						this._IdCours = default(Nullable<int>);
					}
					this.SendPropertyChanged("cour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
